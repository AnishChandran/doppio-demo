Compiled from "FileDescriptors.java"
public class classes.test.FileDescriptors extends java.lang.Object
  SourceFile: "FileDescriptors.java"
  minor version: 0
  major version: 50
  Constant pool:
const #1 = Method	#23.#36;	//  java/lang/Object."<init>":()V
const #2 = Field	#37.#38;	//  java/lang/System.out:Ljava/io/PrintStream;
const #3 = Method	#39.#40;	//  java/io/FileDescriptor.valid:()Z
const #4 = Method	#41.#42;	//  java/io/PrintStream.println:(Z)V
const #5 = InterfaceMethod	#43.#44;	//  java/io/Closeable.close:()V
const #6 = class	#45;	//  java/io/RandomAccessFile
const #7 = String	#46;	//  classes/test/FileDescriptors.java
const #8 = String	#47;	//  r
const #9 = Method	#6.#48;	//  java/io/RandomAccessFile."<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #10 = Method	#6.#49;	//  java/io/RandomAccessFile.getFD:()Ljava/io/FileDescriptor;
const #11 = Method	#22.#50;	//  classes/test/FileDescriptors.testDescriptorValidity:(Ljava/io/Closeable;Ljava/io/FileDescriptor;)V
const #12 = class	#51;	//  java/io/FileInputStream
const #13 = Method	#12.#52;	//  java/io/FileInputStream."<init>":(Ljava/lang/String;)V
const #14 = Method	#12.#49;	//  java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;
const #15 = class	#53;	//  java/io/File
const #16 = String	#54;	//  /tmp/Doppio-FileDescriptorsTest
const #17 = Method	#15.#52;	//  java/io/File."<init>":(Ljava/lang/String;)V
const #18 = class	#55;	//  java/io/FileOutputStream
const #19 = Method	#18.#56;	//  java/io/FileOutputStream."<init>":(Ljava/io/File;)V
const #20 = Method	#18.#49;	//  java/io/FileOutputStream.getFD:()Ljava/io/FileDescriptor;
const #21 = Method	#15.#57;	//  java/io/File.delete:()Z
const #22 = class	#58;	//  classes/test/FileDescriptors
const #23 = class	#59;	//  java/lang/Object
const #24 = Asciz	<init>;
const #25 = Asciz	()V;
const #26 = Asciz	Code;
const #27 = Asciz	LineNumberTable;
const #28 = Asciz	testDescriptorValidity;
const #29 = Asciz	(Ljava/io/Closeable;Ljava/io/FileDescriptor;)V;
const #30 = Asciz	Exceptions;
const #31 = class	#60;	//  java/io/IOException
const #32 = Asciz	main;
const #33 = Asciz	([Ljava/lang/String;)V;
const #34 = Asciz	SourceFile;
const #35 = Asciz	FileDescriptors.java;
const #36 = NameAndType	#24:#25;//  "<init>":()V
const #37 = class	#61;	//  java/lang/System
const #38 = NameAndType	#62:#63;//  out:Ljava/io/PrintStream;
const #39 = class	#64;	//  java/io/FileDescriptor
const #40 = NameAndType	#65:#66;//  valid:()Z
const #41 = class	#67;	//  java/io/PrintStream
const #42 = NameAndType	#68:#69;//  println:(Z)V
const #43 = class	#70;	//  java/io/Closeable
const #44 = NameAndType	#71:#25;//  close:()V
const #45 = Asciz	java/io/RandomAccessFile;
const #46 = Asciz	classes/test/FileDescriptors.java;
const #47 = Asciz	r;
const #48 = NameAndType	#24:#72;//  "<init>":(Ljava/lang/String;Ljava/lang/String;)V
const #49 = NameAndType	#73:#74;//  getFD:()Ljava/io/FileDescriptor;
const #50 = NameAndType	#28:#29;//  testDescriptorValidity:(Ljava/io/Closeable;Ljava/io/FileDescriptor;)V
const #51 = Asciz	java/io/FileInputStream;
const #52 = NameAndType	#24:#75;//  "<init>":(Ljava/lang/String;)V
const #53 = Asciz	java/io/File;
const #54 = Asciz	/tmp/Doppio-FileDescriptorsTest;
const #55 = Asciz	java/io/FileOutputStream;
const #56 = NameAndType	#24:#76;//  "<init>":(Ljava/io/File;)V
const #57 = NameAndType	#77:#66;//  delete:()Z
const #58 = Asciz	classes/test/FileDescriptors;
const #59 = Asciz	java/lang/Object;
const #60 = Asciz	java/io/IOException;
const #61 = Asciz	java/lang/System;
const #62 = Asciz	out;
const #63 = Asciz	Ljava/io/PrintStream;;
const #64 = Asciz	java/io/FileDescriptor;
const #65 = Asciz	valid;
const #66 = Asciz	()Z;
const #67 = Asciz	java/io/PrintStream;
const #68 = Asciz	println;
const #69 = Asciz	(Z)V;
const #70 = Asciz	java/io/Closeable;
const #71 = Asciz	close;
const #72 = Asciz	(Ljava/lang/String;Ljava/lang/String;)V;
const #73 = Asciz	getFD;
const #74 = Asciz	()Ljava/io/FileDescriptor;;
const #75 = Asciz	(Ljava/lang/String;)V;
const #76 = Asciz	(Ljava/io/File;)V;
const #77 = Asciz	delete;

{
public classes.test.FileDescriptors();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/Object."<init>":()V
   4:	return
  LineNumberTable: 
   line 5: 0


static void testDescriptorValidity(java.io.Closeable, java.io.FileDescriptor)   throws java.io.IOException;
  Code:
   Stack=2, Locals=2, Args_size=2
   0:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	aload_1
   4:	invokevirtual	#3; //Method java/io/FileDescriptor.valid:()Z
   7:	invokevirtual	#4; //Method java/io/PrintStream.println:(Z)V
   10:	aload_0
   11:	invokeinterface	#5,  1; //InterfaceMethod java/io/Closeable.close:()V
   16:	getstatic	#2; //Field java/lang/System.out:Ljava/io/PrintStream;
   19:	aload_1
   20:	invokevirtual	#3; //Method java/io/FileDescriptor.valid:()Z
   23:	invokevirtual	#4; //Method java/io/PrintStream.println:(Z)V
   26:	return
  LineNumberTable: 
   line 8: 0
   line 9: 10
   line 10: 16
   line 11: 26

  Exceptions: 
   throws java.io.IOException
public static void main(java.lang.String[])   throws java.io.IOException;
  Code:
   Stack=4, Locals=5, Args_size=1
   0:	new	#6; //class java/io/RandomAccessFile
   3:	dup
   4:	ldc	#7; //String classes/test/FileDescriptors.java
   6:	ldc	#8; //String r
   8:	invokespecial	#9; //Method java/io/RandomAccessFile."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   11:	astore_1
   12:	aload_1
   13:	aload_1
   14:	invokevirtual	#10; //Method java/io/RandomAccessFile.getFD:()Ljava/io/FileDescriptor;
   17:	invokestatic	#11; //Method testDescriptorValidity:(Ljava/io/Closeable;Ljava/io/FileDescriptor;)V
   20:	new	#12; //class java/io/FileInputStream
   23:	dup
   24:	ldc	#7; //String classes/test/FileDescriptors.java
   26:	invokespecial	#13; //Method java/io/FileInputStream."<init>":(Ljava/lang/String;)V
   29:	astore_2
   30:	aload_2
   31:	aload_2
   32:	invokevirtual	#14; //Method java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;
   35:	invokestatic	#11; //Method testDescriptorValidity:(Ljava/io/Closeable;Ljava/io/FileDescriptor;)V
   38:	new	#15; //class java/io/File
   41:	dup
   42:	ldc	#16; //String /tmp/Doppio-FileDescriptorsTest
   44:	invokespecial	#17; //Method java/io/File."<init>":(Ljava/lang/String;)V
   47:	astore_3
   48:	new	#18; //class java/io/FileOutputStream
   51:	dup
   52:	aload_3
   53:	invokespecial	#19; //Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
   56:	astore	4
   58:	aload	4
   60:	aload	4
   62:	invokevirtual	#20; //Method java/io/FileOutputStream.getFD:()Ljava/io/FileDescriptor;
   65:	invokestatic	#11; //Method testDescriptorValidity:(Ljava/io/Closeable;Ljava/io/FileDescriptor;)V
   68:	aload_3
   69:	invokevirtual	#21; //Method java/io/File.delete:()Z
   72:	pop
   73:	return
  LineNumberTable: 
   line 14: 0
   line 15: 12
   line 17: 20
   line 18: 30
   line 21: 38
   line 22: 48
   line 23: 58
   line 24: 68
   line 25: 73

  Exceptions: 
   throws java.io.IOException
}

