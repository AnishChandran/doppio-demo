Compiled from "CustomClassLoader.java"
public class classes.test.CustomClassLoader extends java.lang.ClassLoader
  SourceFile: "CustomClassLoader.java"
  minor version: 0
  major version: 50
  Constant pool:
const #1 = Method	#56.#88;	//  java/lang/ClassLoader."<init>":()V
const #2 = Method	#33.#89;	//  classes/test/CustomClassLoader.findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;
const #3 = Field	#90.#91;	//  java/lang/System.out:Ljava/io/PrintStream;
const #4 = class	#92;	//  java/lang/StringBuilder
const #5 = Method	#4.#88;	//  java/lang/StringBuilder."<init>":()V
const #6 = String	#93;	//  Already loaded 
const #7 = Method	#4.#94;	//  java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #8 = Method	#4.#95;	//  java/lang/StringBuilder.toString:()Ljava/lang/String;
const #9 = Method	#96.#97;	//  java/io/PrintStream.println:(Ljava/lang/String;)V
const #10 = Method	#98.#99;	//  java/lang/String.replace:(CC)Ljava/lang/String;
const #11 = String	#100;	//  .class
const #12 = Method	#33.#101;	//  classes/test/CustomClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
const #13 = class	#102;	//  java/io/ByteArrayOutputStream
const #14 = Method	#13.#88;	//  java/io/ByteArrayOutputStream."<init>":()V
const #15 = Method	#103.#104;	//  java/io/InputStream.read:([BII)I
const #16 = Method	#13.#105;	//  java/io/ByteArrayOutputStream.write:([BII)V
const #17 = Method	#13.#106;	//  java/io/ByteArrayOutputStream.toByteArray:()[B
const #18 = class	#107;	//  java/io/IOException
const #19 = String	#108;	//  ERROR loading class file: 
const #20 = Method	#4.#109;	//  java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
const #21 = class	#110;	//  java/lang/NullPointerException
const #22 = String	#111;	//  ERROR reading 
const #23 = class	#112;	//  java/lang/ClassNotFoundException
const #24 = String	#113;	//  Cannot load class: 
const #25 = Method	#23.#114;	//  java/lang/ClassNotFoundException."<init>":(Ljava/lang/String;)V
const #26 = Method	#33.#115;	//  classes/test/CustomClassLoader.defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;
const #27 = Method	#33.#116;	//  classes/test/CustomClassLoader.resolveClass:(Ljava/lang/Class;)V
const #28 = String	#117;	//  ran defineClass with no issues
const #29 = class	#118;	//  java/lang/SecurityException
const #30 = Method	#56.#119;	//  java/lang/ClassLoader.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
const #31 = String	#120;	//  Called CustomClassLoader.foo
const #32 = String	#121;	//  Called CustomClassLoader.bar
const #33 = class	#122;	//  classes/test/CustomClassLoader
const #34 = Method	#33.#88;	//  classes/test/CustomClassLoader."<init>":()V
const #35 = String	#123;	//  classes.test.CustomClassLoader
const #36 = Method	#44.#124;	//  java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
const #37 = String	#125;	//  Custom loaded class: 
const #38 = String	#126;	//  Class loaded through custom loader is 
const #39 = Method	#96.#127;	//  java/io/PrintStream.print:(Ljava/lang/String;)V
const #40 = Method	#46.#128;	//  java/lang/Object.equals:(Ljava/lang/Object;)Z
const #41 = String	#129;	//  NOT 
const #42 = String	#130;	//  the same as that loaded by System loader.
const #43 = String	#78;	//  foo
const #44 = class	#131;	//  java/lang/Class
const #45 = Method	#44.#132;	//  java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #46 = class	#133;	//  java/lang/Object
const #47 = Method	#134.#135;	//  java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #48 = String	#79;	//  bar
const #49 = String	#136;	//  [Ljava.lang.Object;
const #50 = String	#137;	//  Object[] loaded through custom classloader is 
const #51 = class	#138;	//  "[Ljava/lang/Object;"
const #52 = String	#139;	//  [Ljava.lang.Lolol;
const #53 = Method	#96.#140;	//  java/io/PrintStream.println:(Ljava/lang/Object;)V
const #54 = String	#141;	//  java.lang.Lolol[]
const #55 = String	#142;	//  java.lang.Lolol[] is malformed
const #56 = class	#143;	//  java/lang/ClassLoader
const #57 = Asciz	BUFFER_SIZE;
const #58 = Asciz	I;
const #59 = Asciz	ConstantValue;
const #60 = int	8192;
const #61 = Asciz	<init>;
const #62 = Asciz	()V;
const #63 = Asciz	Code;
const #64 = Asciz	LineNumberTable;
const #65 = Asciz	loadClass;
const #66 = Asciz	(Ljava/lang/String;Z)Ljava/lang/Class;;
const #67 = Asciz	StackMapTable;
const #68 = class	#131;	//  java/lang/Class
const #69 = class	#122;	//  classes/test/CustomClassLoader
const #70 = class	#144;	//  java/lang/String
const #71 = class	#145;	//  "[B"
const #72 = class	#146;	//  java/io/InputStream
const #73 = class	#102;	//  java/io/ByteArrayOutputStream
const #74 = class	#107;	//  java/io/IOException
const #75 = class	#110;	//  java/lang/NullPointerException
const #76 = class	#118;	//  java/lang/SecurityException
const #77 = Asciz	Exceptions;
const #78 = Asciz	foo;
const #79 = Asciz	bar;
const #80 = Asciz	main;
const #81 = Asciz	([Ljava/lang/String;)V;
const #82 = class	#147;	//  "[Ljava/lang/String;"
const #83 = class	#148;	//  java/lang/reflect/Method
const #84 = class	#112;	//  java/lang/ClassNotFoundException
const #85 = class	#149;	//  java/lang/Exception
const #86 = Asciz	SourceFile;
const #87 = Asciz	CustomClassLoader.java;
const #88 = NameAndType	#61:#62;//  "<init>":()V
const #89 = NameAndType	#150:#151;//  findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;
const #90 = class	#152;	//  java/lang/System
const #91 = NameAndType	#153:#154;//  out:Ljava/io/PrintStream;
const #92 = Asciz	java/lang/StringBuilder;
const #93 = Asciz	Already loaded ;
const #94 = NameAndType	#155:#156;//  append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
const #95 = NameAndType	#157:#158;//  toString:()Ljava/lang/String;
const #96 = class	#159;	//  java/io/PrintStream
const #97 = NameAndType	#160:#161;//  println:(Ljava/lang/String;)V
const #98 = class	#144;	//  java/lang/String
const #99 = NameAndType	#162:#163;//  replace:(CC)Ljava/lang/String;
const #100 = Asciz	.class;
const #101 = NameAndType	#164:#165;//  getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
const #102 = Asciz	java/io/ByteArrayOutputStream;
const #103 = class	#146;	//  java/io/InputStream
const #104 = NameAndType	#166:#167;//  read:([BII)I
const #105 = NameAndType	#168:#169;//  write:([BII)V
const #106 = NameAndType	#170:#171;//  toByteArray:()[B
const #107 = Asciz	java/io/IOException;
const #108 = Asciz	ERROR loading class file: ;
const #109 = NameAndType	#155:#172;//  append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
const #110 = Asciz	java/lang/NullPointerException;
const #111 = Asciz	ERROR reading ;
const #112 = Asciz	java/lang/ClassNotFoundException;
const #113 = Asciz	Cannot load class: ;
const #114 = NameAndType	#61:#161;//  "<init>":(Ljava/lang/String;)V
const #115 = NameAndType	#173:#174;//  defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;
const #116 = NameAndType	#175:#176;//  resolveClass:(Ljava/lang/Class;)V
const #117 = Asciz	ran defineClass with no issues;
const #118 = Asciz	java/lang/SecurityException;
const #119 = NameAndType	#65:#66;//  loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
const #120 = Asciz	Called CustomClassLoader.foo;
const #121 = Asciz	Called CustomClassLoader.bar;
const #122 = Asciz	classes/test/CustomClassLoader;
const #123 = Asciz	classes.test.CustomClassLoader;
const #124 = NameAndType	#177:#178;//  forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
const #125 = Asciz	Custom loaded class: ;
const #126 = Asciz	Class loaded through custom loader is ;
const #127 = NameAndType	#179:#161;//  print:(Ljava/lang/String;)V
const #128 = NameAndType	#180:#181;//  equals:(Ljava/lang/Object;)Z
const #129 = Asciz	NOT ;
const #130 = Asciz	the same as that loaded by System loader.;
const #131 = Asciz	java/lang/Class;
const #132 = NameAndType	#182:#183;//  getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
const #133 = Asciz	java/lang/Object;
const #134 = class	#148;	//  java/lang/reflect/Method
const #135 = NameAndType	#184:#185;//  invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
const #136 = Asciz	[Ljava.lang.Object;;
const #137 = Asciz	Object[] loaded through custom classloader is ;
const #138 = Asciz	[Ljava/lang/Object;;
const #139 = Asciz	[Ljava.lang.Lolol;;
const #140 = NameAndType	#160:#186;//  println:(Ljava/lang/Object;)V
const #141 = Asciz	java.lang.Lolol[];
const #142 = Asciz	java.lang.Lolol[] is malformed;
const #143 = Asciz	java/lang/ClassLoader;
const #144 = Asciz	java/lang/String;
const #145 = Asciz	[B;
const #146 = Asciz	java/io/InputStream;
const #147 = Asciz	[Ljava/lang/String;;
const #148 = Asciz	java/lang/reflect/Method;
const #149 = Asciz	java/lang/Exception;
const #150 = Asciz	findLoadedClass;
const #151 = Asciz	(Ljava/lang/String;)Ljava/lang/Class;;
const #152 = Asciz	java/lang/System;
const #153 = Asciz	out;
const #154 = Asciz	Ljava/io/PrintStream;;
const #155 = Asciz	append;
const #156 = Asciz	(Ljava/lang/String;)Ljava/lang/StringBuilder;;
const #157 = Asciz	toString;
const #158 = Asciz	()Ljava/lang/String;;
const #159 = Asciz	java/io/PrintStream;
const #160 = Asciz	println;
const #161 = Asciz	(Ljava/lang/String;)V;
const #162 = Asciz	replace;
const #163 = Asciz	(CC)Ljava/lang/String;;
const #164 = Asciz	getResourceAsStream;
const #165 = Asciz	(Ljava/lang/String;)Ljava/io/InputStream;;
const #166 = Asciz	read;
const #167 = Asciz	([BII)I;
const #168 = Asciz	write;
const #169 = Asciz	([BII)V;
const #170 = Asciz	toByteArray;
const #171 = Asciz	()[B;
const #172 = Asciz	(Ljava/lang/Object;)Ljava/lang/StringBuilder;;
const #173 = Asciz	defineClass;
const #174 = Asciz	(Ljava/lang/String;[BII)Ljava/lang/Class;;
const #175 = Asciz	resolveClass;
const #176 = Asciz	(Ljava/lang/Class;)V;
const #177 = Asciz	forName;
const #178 = Asciz	(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;;
const #179 = Asciz	print;
const #180 = Asciz	equals;
const #181 = Asciz	(Ljava/lang/Object;)Z;
const #182 = Asciz	getMethod;
const #183 = Asciz	(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;;
const #184 = Asciz	invoke;
const #185 = Asciz	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;;
const #186 = Asciz	(Ljava/lang/Object;)V;

{
private static final int BUFFER_SIZE;
  Constant value: int 8192

public classes.test.CustomClassLoader();
  Code:
   Stack=1, Locals=1, Args_size=1
   0:	aload_0
   1:	invokespecial	#1; //Method java/lang/ClassLoader."<init>":()V
   4:	return
  LineNumberTable: 
   line 5: 0


protected synchronized java.lang.Class loadClass(java.lang.String, boolean)   throws java.lang.ClassNotFoundException;
  Code:
   Stack=5, Locals=10, Args_size=3
   0:	aload_0
   1:	aload_1
   2:	invokevirtual	#2; //Method findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;
   5:	astore_3
   6:	aload_3
   7:	ifnull	37
   10:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   13:	new	#4; //class java/lang/StringBuilder
   16:	dup
   17:	invokespecial	#5; //Method java/lang/StringBuilder."<init>":()V
   20:	ldc	#6; //String Already loaded 
   22:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   25:	aload_1
   26:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   29:	invokevirtual	#8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   32:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   35:	aload_3
   36:	areturn
   37:	new	#4; //class java/lang/StringBuilder
   40:	dup
   41:	invokespecial	#5; //Method java/lang/StringBuilder."<init>":()V
   44:	aload_1
   45:	bipush	46
   47:	bipush	47
   49:	invokevirtual	#10; //Method java/lang/String.replace:(CC)Ljava/lang/String;
   52:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   55:	ldc	#11; //String .class
   57:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   60:	invokevirtual	#8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   63:	astore	4
   65:	aconst_null
   66:	astore	5
   68:	aload_0
   69:	aload	4
   71:	invokevirtual	#12; //Method getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
   74:	astore	6
   76:	sipush	8192
   79:	newarray byte
   81:	astore	7
   83:	new	#13; //class java/io/ByteArrayOutputStream
   86:	dup
   87:	invokespecial	#14; //Method java/io/ByteArrayOutputStream."<init>":()V
   90:	astore	8
   92:	iconst_m1
   93:	istore	9
   95:	aload	6
   97:	aload	7
   99:	iconst_0
   100:	sipush	8192
   103:	invokevirtual	#15; //Method java/io/InputStream.read:([BII)I
   106:	dup
   107:	istore	9
   109:	iconst_m1
   110:	if_icmpeq	126
   113:	aload	8
   115:	aload	7
   117:	iconst_0
   118:	iload	9
   120:	invokevirtual	#16; //Method java/io/ByteArrayOutputStream.write:([BII)V
   123:	goto	95
   126:	aload	8
   128:	invokevirtual	#17; //Method java/io/ByteArrayOutputStream.toByteArray:()[B
   131:	astore	5
   133:	goto	195
   136:	astore	6
   138:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   141:	new	#4; //class java/lang/StringBuilder
   144:	dup
   145:	invokespecial	#5; //Method java/lang/StringBuilder."<init>":()V
   148:	ldc	#19; //String ERROR loading class file: 
   150:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   153:	aload	6
   155:	invokevirtual	#20; //Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   158:	invokevirtual	#8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   161:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   164:	goto	195
   167:	astore	6
   169:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   172:	new	#4; //class java/lang/StringBuilder
   175:	dup
   176:	invokespecial	#5; //Method java/lang/StringBuilder."<init>":()V
   179:	ldc	#22; //String ERROR reading 
   181:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   184:	aload	4
   186:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   189:	invokevirtual	#8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   192:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   195:	aload	5
   197:	ifnonnull	227
   200:	new	#23; //class java/lang/ClassNotFoundException
   203:	dup
   204:	new	#4; //class java/lang/StringBuilder
   207:	dup
   208:	invokespecial	#5; //Method java/lang/StringBuilder."<init>":()V
   211:	ldc	#24; //String Cannot load class: 
   213:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   216:	aload_1
   217:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   220:	invokevirtual	#8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   223:	invokespecial	#25; //Method java/lang/ClassNotFoundException."<init>":(Ljava/lang/String;)V
   226:	athrow
   227:	aload_0
   228:	aload_1
   229:	aload	5
   231:	iconst_0
   232:	aload	5
   234:	arraylength
   235:	invokevirtual	#26; //Method defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;
   238:	astore_3
   239:	iload_2
   240:	ifeq	248
   243:	aload_0
   244:	aload_3
   245:	invokevirtual	#27; //Method resolveClass:(Ljava/lang/Class;)V
   248:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   251:	ldc	#28; //String ran defineClass with no issues
   253:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   256:	goto	268
   259:	astore	6
   261:	aload_0
   262:	aload_1
   263:	iload_2
   264:	invokespecial	#30; //Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
   267:	astore_3
   268:	aload_3
   269:	areturn
  Exception table:
   from   to  target type
    68   133   136   Class java/io/IOException

    68   133   167   Class java/lang/NullPointerException

   227   256   259   Class java/lang/SecurityException

  LineNumberTable: 
   line 11: 0
   line 12: 6
   line 13: 10
   line 14: 35
   line 18: 37
   line 21: 65
   line 23: 68
   line 24: 76
   line 25: 83
   line 26: 92
   line 27: 95
   line 28: 113
   line 30: 126
   line 37: 133
   line 32: 136
   line 33: 138
   line 37: 164
   line 35: 167
   line 36: 169
   line 39: 195
   line 40: 200
   line 45: 227
   line 46: 239
   line 47: 243
   line 49: 248
   line 52: 256
   line 50: 259
   line 51: 261
   line 53: 268

  StackMapTable: number_of_entries = 10
   frame_type = 252 /* append */
     offset_delta = 37
     locals = [ class java/lang/Class ]
   frame_type = 255 /* full_frame */
     offset_delta = 57
     locals = [ class classes/test/CustomClassLoader, class java/lang/String, int, class java/lang/Class, class java/lang/String, class "[B", class java/io/InputStream, class "[B", class java/io/ByteArrayOutputStream, int ]
     stack = []
   frame_type = 30 /* same */
   frame_type = 255 /* full_frame */
     offset_delta = 9
     locals = [ class classes/test/CustomClassLoader, class java/lang/String, int, class java/lang/Class, class java/lang/String, class "[B" ]
     stack = [ class java/io/IOException ]
   frame_type = 94 /* same_locals_1_stack_item */
     stack = [ class java/lang/NullPointerException ]
   frame_type = 27 /* same */
   frame_type = 31 /* same */
   frame_type = 20 /* same */
   frame_type = 74 /* same_locals_1_stack_item */
     stack = [ class java/lang/SecurityException ]
   frame_type = 8 /* same */

  Exceptions: 
   throws java.lang.ClassNotFoundException
public static void foo();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	ldc	#31; //String Called CustomClassLoader.foo
   5:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   8:	return
  LineNumberTable: 
   line 57: 0
   line 58: 8


public static void bar();
  Code:
   Stack=2, Locals=0, Args_size=0
   0:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   3:	ldc	#32; //String Called CustomClassLoader.bar
   5:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   8:	return
  LineNumberTable: 
   line 61: 0
   line 62: 8


public static void main(java.lang.String[])   throws java.lang.Exception;
  Code:
   Stack=3, Locals=8, Args_size=1
   0:	new	#33; //class classes/test/CustomClassLoader
   3:	dup
   4:	invokespecial	#34; //Method "<init>":()V
   7:	astore_1
   8:	ldc	#35; //String classes.test.CustomClassLoader
   10:	iconst_1
   11:	aload_1
   12:	invokestatic	#36; //Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
   15:	astore_2
   16:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   19:	new	#4; //class java/lang/StringBuilder
   22:	dup
   23:	invokespecial	#5; //Method java/lang/StringBuilder."<init>":()V
   26:	ldc	#37; //String Custom loaded class: 
   28:	invokevirtual	#7; //Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   31:	aload_2
   32:	invokevirtual	#20; //Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   35:	invokevirtual	#8; //Method java/lang/StringBuilder.toString:()Ljava/lang/String;
   38:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   41:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   44:	ldc	#38; //String Class loaded through custom loader is 
   46:	invokevirtual	#39; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   49:	ldc_w	#33; //class classes/test/CustomClassLoader
   52:	aload_2
   53:	invokevirtual	#40; //Method java/lang/Object.equals:(Ljava/lang/Object;)Z
   56:	ifne	67
   59:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   62:	ldc	#41; //String NOT 
   64:	invokevirtual	#39; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   67:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   70:	ldc	#42; //String the same as that loaded by System loader.
   72:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   75:	aload_2
   76:	ldc	#43; //String foo
   78:	iconst_0
   79:	anewarray	#44; //class java/lang/Class
   82:	invokevirtual	#45; //Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   85:	astore_3
   86:	aload_3
   87:	aconst_null
   88:	iconst_0
   89:	anewarray	#46; //class java/lang/Object
   92:	invokevirtual	#47; //Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   95:	pop
   96:	aload_2
   97:	ldc	#48; //String bar
   99:	iconst_0
   100:	anewarray	#44; //class java/lang/Class
   103:	invokevirtual	#45; //Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   106:	astore	4
   108:	aload	4
   110:	aconst_null
   111:	iconst_0
   112:	anewarray	#46; //class java/lang/Object
   115:	invokevirtual	#47; //Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   118:	pop
   119:	ldc	#49; //String [Ljava.lang.Object;
   121:	iconst_1
   122:	aload_1
   123:	invokestatic	#36; //Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
   126:	astore	5
   128:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   131:	ldc	#50; //String Object[] loaded through custom classloader is 
   133:	invokevirtual	#39; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   136:	ldc_w	#51; //class "[Ljava/lang/Object;"
   139:	astore	6
   141:	aload	5
   143:	aload	6
   145:	if_acmpeq	156
   148:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   151:	ldc	#41; //String NOT 
   153:	invokevirtual	#39; //Method java/io/PrintStream.print:(Ljava/lang/String;)V
   156:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   159:	ldc	#42; //String the same as that loaded by System loader.
   161:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   164:	ldc	#52; //String [Ljava.lang.Lolol;
   166:	iconst_1
   167:	aload_1
   168:	invokestatic	#36; //Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
   171:	astore	7
   173:	goto	186
   176:	astore	7
   178:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   181:	aload	7
   183:	invokevirtual	#53; //Method java/io/PrintStream.println:(Ljava/lang/Object;)V
   186:	ldc	#54; //String java.lang.Lolol[]
   188:	iconst_1
   189:	aload_1
   190:	invokestatic	#36; //Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
   193:	astore	7
   195:	goto	208
   198:	astore	7
   200:	getstatic	#3; //Field java/lang/System.out:Ljava/io/PrintStream;
   203:	ldc	#55; //String java.lang.Lolol[] is malformed
   205:	invokevirtual	#9; //Method java/io/PrintStream.println:(Ljava/lang/String;)V
   208:	return
  Exception table:
   from   to  target type
   164   173   176   Class java/lang/ClassNotFoundException

   186   195   198   Class java/lang/ClassNotFoundException

  LineNumberTable: 
   line 65: 0
   line 67: 8
   line 68: 16
   line 70: 41
   line 71: 49
   line 72: 59
   line 74: 67
   line 76: 75
   line 77: 86
   line 78: 96
   line 79: 108
   line 81: 119
   line 82: 128
   line 83: 136
   line 84: 141
   line 85: 148
   line 87: 156
   line 90: 164
   line 93: 173
   line 91: 176
   line 92: 178
   line 96: 186
   line 99: 195
   line 97: 198
   line 98: 200
   line 100: 208

  StackMapTable: number_of_entries = 6
   frame_type = 253 /* append */
     offset_delta = 67
     locals = [ class classes/test/CustomClassLoader, class java/lang/Class ]
   frame_type = 255 /* full_frame */
     offset_delta = 88
     locals = [ class "[Ljava/lang/String;", class classes/test/CustomClassLoader, class java/lang/Class, class java/lang/reflect/Method, class java/lang/reflect/Method, class java/lang/Class, class java/lang/Class ]
     stack = []
   frame_type = 83 /* same_locals_1_stack_item */
     stack = [ class java/lang/ClassNotFoundException ]
   frame_type = 9 /* same */
   frame_type = 75 /* same_locals_1_stack_item */
     stack = [ class java/lang/ClassNotFoundException ]
   frame_type = 9 /* same */

  Exceptions: 
   throws java.lang.Exception
}

